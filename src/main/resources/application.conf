#Below configuration instructs Akka to create 1 thread per available processor, with a maximum of 24 threads in the pool.
akka {
  actor {
    default-dispatcher {
      fork-join-executor {
        # Settings this to 1 instead of 3 seems to improve performance.
        parallelism-factor = 1.0

        # @richdougherty: Not sure why this is set below the Akka
        # default.
        # if parallelism-max set to 1 and nr-of-instances > 1, will be blocking
        # if parallelism-max set to > 1 and nr-of-instances > 1, will be like non-blocking (async)
        parallelism-max = 1

        # Setting this to LIFO changes the fork-join-executor
        # to use a stack discipline for task scheduling. This usually
        # improves throughput at the cost of possibly increasing
        # latency and risking task starvation (which should be rare).
        task-peeking-mode = FIFO
      }
    }
  }
}
#akka.actor.deployment {
#  /master/worker {
#    router = round-robin-pool
#    nr-of-instances = 3
#  }
#}

#akka.actor.deployment {
#  /master/worker {
#    router = round-robin-group
#    nr-of-instances = 3
#    routees.paths = ["/master/worker/w1", "/master/worker/w2", "/master/worker/w3"]
#  }
#}

#akka.actor.deployment {
#  /actor_consumer/router3 {
#    router = round-robin-group
#    routees.paths = ["/user/actor_consumer/w1", "/user/actor_consumer/w2", "/user/actor_consumer/w3"]
#  }
#}
include "endpoints"